name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  library:
    runs-on: macos-14
    strategy:
      matrix:
        combination:
          - xcode: '15.4'
            variation: ios
            os_version: 17.5
          - xcode: '16.2'
            variation: ios
            os_version: 18.0

          - xcode: '15.4'
            variation: tvos
            os_version: 17.5
          - xcode: '16.2'
            variation: tvos
            os_version: 18.0

          - xcode: '15.4'
            variation: watchos
            os_version: 10.5
          - xcode: '16.2'
            variation: watchos
            os_version: 11.0

          - xcode: '15.4'
            variation: macos
          - xcode: '16.2'
            variation: macos

          - xcode: '15.4'
            variation: examples
          - xcode: '16.2'
            variation: examples

    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.combination.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.combination.xcode }}.app
      - name: Skip macro validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Set OS version
        run: |
          if [[ "${{ matrix.combination.variation }}" == "ios" ]]; then
            echo "IOS_VERSION=${{ matrix.combination.os_version }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.combination.variation }}" == "tvos" ]]; then
            echo "TVOS_VERSION=${{ matrix.combination.os_version }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.combination.variation }}" == "watchos" ]]; then
            echo "WATCHOS_VERSION=${{ matrix.combination.os_version }}" >> $GITHUB_ENV
          fi
      - name: Run Library Evolution builds
        run: make build-for-library-evolution
      - name: Run tests
        run: make test-${{ matrix.combination.variation }}

  wasm:
    name: SwiftWasm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - toolchain: swift-DEVELOPMENT-SNAPSHOT-2024-09-12-a
            swift-sdk: swift-wasm-DEVELOPMENT-SNAPSHOT-2024-09-12-a
            checksum: 630ce23114580dfae029f832d8ccc8b1ba5136b7f915e82f8e405650e326b562
    steps:
      - uses: actions/checkout@v4
      - uses: bytecodealliance/actions/wasmtime/setup@v1
      - name: Install Swift and Swift SDK for WebAssembly
        run: |
          PREFIX=/opt/swift
          SWIFT_TOOLCHAIN_TAG="${{ matrix.toolchain }}"
          SWIFT_SDK_TAG="${{ matrix.swift-sdk }}"
          set -ex
          curl -f -o /tmp/swift.tar.gz "https://download.swift.org/development/ubuntu2204/$SWIFT_TOOLCHAIN_TAG/$SWIFT_TOOLCHAIN_TAG-ubuntu22.04.tar.gz"
          sudo mkdir -p $PREFIX; sudo tar -xzf /tmp/swift.tar.gz -C $PREFIX --strip-component 1
          $PREFIX/usr/bin/swift sdk install "https://github.com/swiftwasm/swift/releases/download/$SWIFT_SDK_TAG/$SWIFT_SDK_TAG-wasm32-unknown-wasi.artifactbundle.zip" --checksum ${{ matrix.checksum }}
          echo "$PREFIX/usr/bin" >> $GITHUB_PATH
      - name: Build tests
        run: swift build --swift-sdk wasm32-unknown-wasi --build-tests -Xlinker -z -Xlinker stack-size=$((1024 * 1024))
      - name: Run tests
        run: wasmtime --dir . .build/debug/swift-navigationPackageTests.wasm

  windows:
    name: Windows
    strategy:
      matrix:
        os: [windows-latest]
        config: ['debug', 'release']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.10-release
          tag: 5.10-RELEASE
      - uses: actions/checkout@v4
      - name: Build
        run: swift build -c ${{ matrix.config }}
